{"version":3,"sources":["request.js"],"names":[],"mappings":";;;;;kBAsCwB,O;;AAtCxB;;;;AAIA;;;;;;AAFA,QAAQ,aAAR,EAAuB,QAAvB;AACA,QAAQ,kBAAR;;;AAGA,SAAS,SAAT,CAAmB,QAAnB,EAA6B;AAC3B;AACA,SAAO,SAAS,IAAT,EAAP;AACD;;AAED,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAC7B,MAAI,SAAS,MAAT,IAAmB,GAAnB,IAA0B,SAAS,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAO,QAAP;AACD,GAFD,MAEO,IAAI,SAAS,MAAT,KAAoB,GAAxB,EAA4B;AACjC,WAAO,QAAP;AACD;;AAED,MAAM,QAAQ,IAAI,KAAJ,CAAU,SAAS,UAAnB,CAAd;AACA,QAAM,QAAN,GAAiB,QAAjB;AACA,QAAM,KAAN;AACD;;AAED,SAAS,iBAAT,OAAmC;AAAA,MAAP,IAAO,QAAP,IAAO;AAAA,MAC1B,MAD0B,GACP,IADO,CAC1B,MAD0B;AAAA,MAClB,OADkB,GACP,IADO,CAClB,OADkB;;AAEjC,MAAI,WAAW,OAAf,EAAwB;AACtB,UAAM,IAAI,KAAJ,CAAU,OAAV,CAAN;AACD;AACD,SAAO,EAAC,UAAD,EAAP;AACD;;AAED;;;;;;;AAOe,SAAS,OAAT,CAAiB,GAAjB,EAAsB,OAAtB,EAA+B;AAC5C,SAAO,qBAAM,uBAAa,GAAnB,EAAwB,OAAxB,EACJ,IADI,CACC,WADD,EAEJ,IAFI,CAEC,SAFD,EAGJ,IAHI,CAGC,gBAAQ;AACZ;AACA,WAAO,EAAC,UAAD,EAAP;AACD,GANI;;AAQL;AARK,GASJ,KATI,CASE;AAAA,WAAQ,EAAC,QAAD,EAAR;AAAA,GATF,CAAP;AAUD","file":"request-compiled.js","sourcesContent":["import fetch from 'dva/fetch';\n\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\nimport DomainPort from '../utils/DomainPort';\n\nfunction parseJSON(response) {\n  // console.log(response)\n  return response.json();\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else if (response.status === 500){\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\nfunction parseErrorMessage({data}) {\n  const {status, message} = data;\n  if (status === 'error') {\n    throw new Error(message);\n  }\n  return {data};\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url, options) {\n  return fetch(DomainPort + url, options)\n    .then(checkStatus)\n    .then(parseJSON)\n    .then(data => {\n      // console.log(data)\n      return {data}\n    })\n\n    // .then(parseErrorMessage)\n    .catch(err => ({err}));\n}\n"]}