{"version":3,"sources":["Histogram.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEM,S;;;AAEJ,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,sHACX,KADW;;AAEjB,UAAK,KAAL,GAAa;AACX,kBAAY,EADD;AAEX,iBAAW,EAFA;AAGX,kBAAY;AAHD,KAAb;AAFiB;AAOlB;;;;8CAEyB,S,EAAW;AACnC,WAAK,QAAL,CAAc;AACZ,iDAAgB,UAAU,UAA1B,EADY;AAEZ,gDAAe,UAAU,SAAzB,EAFY;AAGZ,iDAAgB,UAAU,UAA1B;AAHY,OAAd;AAKD;;;6BAEQ;AACP,UAAM,aAAa,KAAK,KAAL,CAAW,UAA9B;AACA,UAAM,YAAY,EAAlB;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,kBAAU,IAAV,CAAe;AACb,iBAAO,WAAW,CAAX,CADM;AAEb,qBAAW;AACT,mBAAO,SADE;AAET,wBAAY;AAFH;AAFE,SAAf;AAOD;;AAED,UAAM,YAAY,KAAK,KAAL,CAAW,SAA7B;AACA,UAAM,aAAa,KAAK,KAAL,CAAW,UAA9B;AACA,UAAM,WAAW,EAAjB;AACA,WAAK,IAAI,KAAI,CAAb,EAAgB,KAAI,UAAU,MAA9B,EAAsC,IAAtC,EAA2C;AACzC,iBAAS,IAAT,CAAc;AACZ,gBAAM,WAAW,EAAX,CADM;AAEZ,iBAAO,UAAU,EAAV,CAFK;AAGZ,qBAAW;AACT,oBAAQ;AACN,qBAAO,WAAW,EAAX;AADD;AADC,WAHC;AAQZ,iBAAO;AACL,oBAAQ;AACN,oBAAM,IADA;AAEN,wBAAU,OAFJ;AAGN,sBAAQ,CAAC,CAAD,EAAI,CAAC,CAAL,CAHF;AAIN,yBAAW;AACT,uBAAO,SADE;AAET,4BAAY,iBAFH;AAGT,0BAAU;AAHD;AAJL;AADH;AARK,SAAd;AAqBD;;AAED,UAAM,SAAS;AACb,iBAAS;AACP,mBAAS,MADF;AAEP,uBAAa;AACX,kBAAM;AADK;AAFN,SADI;AAOb,cAAM;AACJ,gBAAM,IADF;AAEJ,iBAAO,IAFH;AAGJ,kBAAQ,IAHJ;AAIJ,eAAK,KAJD;AAKJ,wBAAc;AALV,SAPO;AAcb,eAAO;AACL,gBAAM,OADD;AAEL,uBAAa,CAAC,CAAD,EAAI,IAAJ,CAFR;AAGL,gBAAM,IAHD;AAIL,oBAAU;AACR,kBAAM;AADE,WAJL;AAOL,oBAAU;AACR,kBAAM;AADE,WAPL;AAUL,qBAAW;AACT,kBAAM;AADG,WAVN;AAaL,qBAAW;AACT,uBAAW;AACT,qBAAO,CAAC,SAAD,CADE;AAET,qBAAO,CAFE;AAGT,oBAAM;AAHG;AADF,WAbN;AAoBL,uBAAa;AApBR,SAdM;AAoCb,eAAO;AACL,gBAAM,UADD;AAEL,gBAAM,SAFD;AAGL,oBAAU;AACR,kBAAM;AADE,WAHL;AAML,oBAAU;AACR,kBAAM;AADE;AANL,SApCM;AA8Cb,gBAAQ,CAAC;AACP,gBAAM,QADC;AAEP,gBAAM,KAFC;AAGP,gBAAM,QAHC;AAIP,oBAAU,MAJH;AAKP,wBAAc;AALP,SAAD;AA9CK,OAAf;;AAuDA,aACE;AAAA;AAAA,UAAK,WAAW,oBAAO,kBAAvB;AACE,wDAAkB,0BAAlB,EAAoC,QAAQ,MAA5C,EAAoD,OAAO,EAAC,QAAQ,MAAT,EAA3D;AADF,OADF;AAKD;;;;EAvHqB,gBAAM,S;;kBA0Hf,S","file":"Histogram-compiled.js","sourcesContent":["import React from 'react';\nimport styles from './Histogram.css';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\n\nclass Histogram extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      labelItems: [],\n      mainItems: [],\n      mainColors: [],\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      labelItems: [...nextProps.labelItems],\n      mainItems: [...nextProps.mainItems],\n      mainColors: [...nextProps.mainColors],\n    });\n  }\n\n  render() {\n    const labelItems = this.state.labelItems;\n    const labelData = [];\n    for (let i = 0; i < labelItems.length; i++) {\n      labelData.push({\n        value: labelItems[i],\n        textStyle: {\n          color: '#939cae',\n          fontFamily: 'Microsoft YaHei',\n        },\n      })\n    }\n\n    const mainItems = this.state.mainItems;\n    const mainColors = this.state.mainColors;\n    const mainData = [];\n    for (let i = 0; i < mainItems.length; i++) {\n      mainData.push({\n        name: labelItems[i],\n        value: mainItems[i],\n        itemStyle: {\n          normal: {\n            color: mainColors[i],\n          },\n        },\n        label: {\n          normal: {\n            show: true,\n            position: 'right',\n            offset: [0, -1],\n            textStyle: {\n              color: '#939cae',\n              fontFamily: 'Microsoft YaHei',\n              fontSize: 11,\n            },\n          },\n        },\n      })\n    }\n\n    const option = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      grid: {\n        left: '0%',\n        right: '4%',\n        bottom: '1%',\n        top: '13%',\n        containLabel: true,\n      },\n      xAxis: {\n        type: 'value',\n        boundaryGap: [0, 0.01],\n        show: true,\n        axisLine: {\n          show: false,\n        },\n        axisTick: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        splitLine: {\n          lineStyle: {\n            color: ['#eeeeee'],\n            width: 1,\n            type: 'solid',\n          },\n        },\n        splitNumber: 9,\n      },\n      yAxis: {\n        type: 'category',\n        data: labelData,\n        axisTick: {\n          show: false,\n        },\n        axisLine: {\n          show: false,\n        },\n      },\n      series: [{\n        name: 'number',\n        type: 'bar',\n        data: mainData,\n        barWidth: '16px',\n        barMinHeight: 1,\n      }]\n    };\n\n    return (\n      <div className={styles.histogramContainer}>\n        <ReactEchartsCore echarts={echarts} option={option} style={{height: '100%'}}/>\n      </div>\n    )\n  }\n}\n\nexport default Histogram;\n"]}