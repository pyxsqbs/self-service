{"version":3,"sources":["model-IndexPage.js"],"names":[],"mappings":";;;;;;AAAA;;AASA;;AACA;;AACA;;kBAEe;;AAEb,aAAW,gBAFE;;AAIb,SAAO;AACL,aAAS,KADJ;AAEL,UAAM,IAFD;AAGL,aAAS;AACP,YAAM;AADC,KAHJ;AAML,WAAO;AANF,GAJM;;AAab,iBAAe,EAbF;;AAeb,WAAS;AACL,mBADK;AAAA,UACY,OADZ,QACY,OADZ;AAAA,UACuB,IADvB,SACuB,IADvB;AAAA,UAC6B,GAD7B,SAC6B,GAD7B;AAAA,UACkC,MADlC,SACkC,MADlC;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEgB,sCAAoB,OAApB,CAFhB;;AAAA;AAEC,oBAFD;AAAA;AAAA,qBAGqB,OAAO;AAAA,uBAAS,MAAM,cAAN,CAAqB,OAA9B;AAAA,eAAP,CAHrB;;AAAA;AAGC,yBAHD;;AAAA,oBAID,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAA9C,IAAmD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,UAA/B,MAA+C,CAAC,CAAnG,IAAwG,gBAAgB,OAAO,IAAP,CAAY,OAJnI;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKG,IAAI,EAAC,MAAM,cAAP,EAAuB,SAAS,OAAO,IAAvC,EAAJ,CALH;;AAAA;AAAA;AAAA,qBAOiB,OAAO;AAAA,uBAAS,MAAM,cAAN,CAAqB,OAA9B;AAAA,eAAP,CAPjB;;AAAA;AAOC,qBAPD;AAAA;AAAA,qBAQc,OAAO;AAAA,uBAAS,MAAM,cAAN,CAAqB,IAA9B;AAAA,eAAP,CARd;;AAAA;AAQC,kBARD;;AAAA,kBASA,OATA;AAAA;AAAA;AAAA;;AAUC,oBAVD;;AAAA,oBAWC,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,QAA/B,IAA2C,CAAC,CAA5C,IAAiD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,UAA/B,IAA6C,CAAC,CAXhG;AAAA;AAAA;AAAA;;AAYD,uBAAS,OAAO,GAAP,CAAW,QAAX,CAAoB,MAA7B;;AAZC,mBAaG,MAbH;AAAA;AAAA;AAAA;;AAcO,gCAdP,GAc4B,SAArB,kBAAqB,CAAU,GAAV,EAAe;AACxC,mCAAa,OAAb,EAAsB;AACpB,2BAAY,OAAO,GAAP,CAAW,QAAX,CAAoB,MAAhC,SAA0C,OAAO,GAAP,CAAW,QAAX,CAAoB,UAD1C;AAEpB,+BAAgB,OAAO,GAAvB,UAA+B,GAA/B,MAFoB;AAGpB,6BAAW;AAHS,iBAAtB;AAKD,eApBF;;AAAA,4BAqBS,MArBT;AAAA,8CAsBQ,GAtBR,wBAyBQ,GAzBR,wBA4BQ,GA5BR;AAAA;;AAAA;AAuBK,iCAAmB,QAAnB;AAvBL;;AAAA;AA0BK,iCAAmB,MAAnB;AA1BL;;AAAA;AA6BK,iCAAmB,SAAnB;AA7BL;;AAAA;AAgCK,iCAAmB,MAAnB;;AAhCL;AAAA;AAAA;;AAAA;AAoCD,iCAAa,IAAb,CAAkB;AAChB,yBAAS,UADO;AAEhB,6BAAa,sCAFG;AAGhB,2BAAW;AAHK,eAAlB;AAKA,kCAAY,OAAZ,CAAoB,eAApB;;AAzCC;AAAA;AAAA;;AAAA;AA4CH,qCAAU,SAAV,EAAqB,OAArB;AACA,uBAAS,MAAT,GAAkB,gBAAgB,KAAK,UAArB,GAAkC,UAApD;AA7CG;AAAA,qBA8CiB,OAAO;AAAA,uBAAS,MAAM,cAAN,CAAqB,KAA9B;AAAA,eAAP,CA9CjB;;AAAA;AA8CG,mBA9CH;;AA+CH,kCAAY,IAAZ,CAAiB,MAAM,KAAvB;AA/CG;AAAA,qBAgDkB,mCAAiB,KAAK,QAAtB,CAhDlB;;AAAA;AAgDG,qBAhDH;;AAiDH,qCAAU,aAAV,EAAyB,KAAK,QAA9B;AACA,qCAAU,SAAV,EAAqB,QAAO,IAAP,CAAY,IAAZ,CAAiB,CAAjB,EAAoB,KAAzC;;AAlDG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDL,mBArDK;AAAA,UAqDY,OArDZ,SAqDY,OArDZ;AAAA,UAqDuB,IArDvB,SAqDuB,IArDvB;AAAA,UAqD6B,GArD7B,SAqD6B,GArD7B;AAAA,UAqDkC,MArDlC,SAqDkC,MArDlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAsDgB,mCAtDhB;;AAAA;AAsDC,oBAtDD;;AAAA,oBAuDD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAA9C,IAAmD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,UAA/B,MAA+C,CAAC,CAvDlG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAwDG,IAAI,EAAC,MAAM,aAAP,EAAsB,SAAS,OAAO,IAAtC,EAAJ,CAxDH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2DL,cA3DK;AAAA,UA2DO,OA3DP,SA2DO,OA3DP;AAAA,UA2DkB,IA3DlB,SA2DkB,IA3DlB;AAAA,UA2DwB,GA3DxB,SA2DwB,GA3DxB;AAAA,UA2D6B,MA3D7B,SA2D6B,MA3D7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA4DgB,8BA5DhB;;AAAA;AA4DC,oBA5DD;;AA6DC,gCA7DD,GA6DsB,SAArB,kBAAqB,CAAU,GAAV,EAAe,IAAf,EAAqB;AAC9C,mCAAa,IAAb,EAAmB;AACjB,2BAAS,GADQ;AAEjB,6BAAW;AAFM,iBAAnB;AAID,eAlEI;;AAAA,oBAmED,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAA9C,IAAmD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,UAA/B,MAA+C,CAAC,CAnElG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAoEG,IAAI,EAAC,MAAM,MAAP,EAAJ,CApEH;;AAAA;AAAA;AAAA,qBAqEG,IAAI,EAAC,MAAM,4BAAP,EAAJ,CArEH;;AAAA;AAAA;AAAA,qBAsEG,IAAI,EAAC,MAAM,0BAAP,EAAJ,CAtEH;;AAAA;AAAA;AAAA,qBAuEG,IAAI,EAAC,MAAM,0BAAP,EAAJ,CAvEH;;AAAA;AAAA;AAAA,qBAwEG,IAAI,EAAC,MAAM,wBAAP,EAAJ,CAxEH;;AAAA;AAAA;AAAA,qBAyEG,IAAI,EAAC,MAAM,wBAAP,EAAJ,CAzEH;;AAAA;AAAA;AAAA,qBA0EG,IAAI,EAAC,MAAM,sBAAP,EAAJ,CA1EH;;AAAA;AAAA;AAAA,qBA2EG,IAAI,EAAC,MAAM,sBAAP,EAAJ,CA3EH;;AAAA;AAAA;AAAA,qBA4EG,IAAI,EAAC,MAAM,oBAAP,EAAJ,CA5EH;;AAAA;AAAA;AAAA,qBA6EG,IAAI,EAAC,MAAM,2BAAP,EAAJ,CA7EH;;AAAA;AAAA;AAAA,qBA8EG,IAAI,EAAC,MAAM,4BAAP,EAAJ,CA9EH;;AAAA;AAAA;AAAA,qBA+EG,IAAI,EAAC,MAAM,wBAAP,EAAJ,CA/EH;;AAAA;AAgFH,iCAAmB,MAAnB,EAA2B,SAA3B;AACA;AACA,kCAAY,IAAZ,CAAiB,eAAjB;AAlFG;AAAA;;AAAA;AAoFH,iCAAmB,MAAnB,EAA2B,OAA3B;;AApFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuFL,2BAvFK;AAAA,UAuFoB,OAvFpB,SAuFoB,OAvFpB;AAAA,UAuF+B,IAvF/B,SAuF+B,IAvF/B;AAAA,UAuFqC,GAvFrC,SAuFqC,GAvFrC;AAAA,UAuF0C,MAvF1C,SAuF0C,MAvF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAwFgB,0CAAwB,OAAxB,CAxFhB;;AAAA;AAwFC,oBAxFD;;AAyFC,gCAzFD,GAyFsB,SAArB,kBAAqB,CAAU,GAAV,EAAe,IAAf,EAAqB;AAC9C,mCAAa,IAAb,EAAmB;AACjB,2BAAS,GADQ;AAEjB,6BAAW;AAFM,iBAAnB;AAID,eA9FI;;AA+FL,kBAAI,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAA9C,IAAmD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,UAA/B,MAA+C,CAAC,CAAvG,EAA0G;AACxG,mCAAmB,MAAnB,EAA2B,SAA3B;AACD,eAFD,MAEO;AACL,mCAAmB,MAAnB,EAA2B,OAA3B;AACD;;AAnGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqGL,2BArGK;AAAA,UAqGoB,OArGpB,SAqGoB,OArGpB;AAAA,UAqG+B,IArG/B,UAqG+B,IArG/B;AAAA,UAqGqC,GArGrC,UAqGqC,GArGrC;AAAA,UAqG0C,MArG1C,UAqG0C,MArG1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAsGgB,kCAAgB,OAAhB,CAtGhB;;AAAA;AAsGC,oBAtGD;;AAuGC,gCAvGD,GAuGsB,SAArB,kBAAqB,CAAU,GAAV,EAAe,IAAf,EAAqB;AAC9C,mCAAa,IAAb,EAAmB;AACjB,2BAAS,GADQ;AAEjB,6BAAW;AAFM,iBAAnB;AAID,eA5GI;;AAAA,oBA8GD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,QAA/B,MAA6C,CAAC,CAA9C,IAAmD,KAAK,SAAL,CAAe,MAAf,EAAuB,OAAvB,CAA+B,UAA/B,MAA+C,CAAC,CAAnG,IAAwG,OAAO,IAAP,CAAY,OA9GnH;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA+GmB,0CAAwB,OAAxB,CA/GnB;;AAAA;AA+GG,qBA/GH;;AAgHH,kBAAI,KAAK,SAAL,CAAe,OAAf,EAAwB,OAAxB,CAAgC,QAAhC,MAA8C,CAAC,CAA/C,IAAoD,QAAQ,IAAR,CAAa,OAArE,EAA8E;AAC5E,mCAAmB,MAAnB,EAA2B,SAA3B;AACD,eAFD,MAEO;AACL,mCAAmB,gBAAnB,EAAqC,OAArC;AACD;AApHE;AAAA;;AAAA;AAsHH,iCAAmB,eAAnB,EAAoC,OAApC;;AAtHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAfI;;AA0Ib,YAAU;AACR,gBADQ,wBACK,KADL,UACuB;AAAA,UAAV,OAAU,UAAV,OAAU;;AAC7B,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB,OAAzB,CAAP;AACD,KAHO;AAIR,eAJQ,uBAII,KAJJ,UAIsB;AAAA,UAAV,OAAU,UAAV,OAAU;;AAC5B,aAAO,MAAP,CAAc,MAAM,OAApB,EAA6B,OAA7B;AACA,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAlB,CAAP;AACD,KAPO;AAQR,mBARQ,2BAQQ,KARR,UAQ0B;AAAA,UAAV,OAAU,UAAV,OAAU;;AAChC,YAAM,KAAN,GAAc,OAAd;AACA,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAlB,CAAP;AACD,KAXO;AAYR,QAZQ,gBAYH,KAZG,UAYe;AAAA,UAAV,OAAU,UAAV,OAAU;;AACrB,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB;AACvB,iBAAS,KADc;AAEvB,cAAM,IAFiB;AAGvB,iBAAS;AACP,gBAAM;AADC,SAHc;AAMvB,eAAO;AANgB,OAAlB,CAAP;AAQD;AArBO;AA1IG,C","file":"model-IndexPage-compiled.js","sourcesContent":["import {\n  postLoginData,\n  getPhotoId,\n  loadUserMsg,\n  postUpdateUserMsg,\n  postUpdateUserPwd,\n  checkUser,\n  logout,\n} from '../services/service-IndexPage';\nimport {hashHistory} from 'dva/router';\nimport {delAllCookie, setCookie} from '../utils/cookie';\nimport {notification} from 'antd';\n\nexport default {\n\n  namespace: 'modelIndexPage',\n\n  state: {\n    success: false,\n    data: null,\n    userMsg: {\n      data: {},\n    },\n    route: '',\n  },\n\n  subscriptions: {},\n\n  effects: {\n    * submitLoginData({payload}, {call, put, select}) {\n      const result = yield call(postLoginData, payload);\n      const initSuccess = yield select(state => state.modelIndexPage.success);\n      if (JSON.stringify(result).indexOf('\"err\":') === -1 && JSON.stringify(result).indexOf('\"error\":') === -1 && initSuccess !== result.data.success) {\n        yield put({type: 'loginSuccess', payload: result.data});\n      }\n      const success = yield select(state => state.modelIndexPage.success);\n      const data = yield select(state => state.modelIndexPage.data);\n      if (!success) {\n        let status;\n        if (JSON.stringify(result).indexOf('\"err\":') > -1 || JSON.stringify(result).indexOf('\"error\":') > -1) {\n          status = result.err.response.status;\n          if (status) {\n            const notificationConfig = function (msg) {\n              notification['error']({\n                message: `${result.err.response.status} ${result.err.response.statusText}`,\n                description: `${result.err} (${msg})`,\n                placement: 'topLeft',\n              });\n            };\n            switch (status) {\n              case 404:\n                notificationConfig('找不到服务器');\n                break;\n              case 504:\n                notificationConfig('网络超时');\n                break;\n              case 500:\n                notificationConfig('服务器内部错误');\n                break;\n              default:\n                notificationConfig('未知错误');\n            }\n          }\n        } else {\n          notification.open({\n            message: '用户名或密码错误',\n            description: 'ERROR Incorrect username or password',\n            placement: 'topLeft',\n          });\n          hashHistory.replace('/loginContent');\n        }\n      } else {\n        setCookie('success', success);\n        document.cookie = \"JSESSIONID=\" + data.jsessionid + \"; path=/\";\n        const route = yield select(state => state.modelIndexPage.route);\n        hashHistory.push('/' + route);\n        const result = yield call(getPhotoId, data.userName);\n        setCookie('currentUser', data.userName);\n        setCookie('photoId', result.data.root[0].photo);\n      }\n    },\n    * loadUserMessage({payload}, {call, put, select}) {\n      const result = yield call(loadUserMsg);\n      if (JSON.stringify(result).indexOf('\"err\":') === -1 && JSON.stringify(result).indexOf('\"error\":') === -1) {\n        yield put({type: 'initUserMsg', payload: result.data});\n      }\n    },\n    * postLogout({payload}, {call, put, select}) {\n      const result = yield call(logout);\n      const notificationConfig = function (msg, type) {\n        notification[type]({\n          message: msg,\n          placement: 'topLeft',\n        });\n      };\n      if (JSON.stringify(result).indexOf('\"err\":') === -1 && JSON.stringify(result).indexOf('\"error\":') === -1) {\n        yield put({type: 'INIT'});\n        yield put({type: 'modelKnowledgeDetails/INIT'});\n        yield put({type: 'modelQueryKnowledge/INIT'});\n        yield put({type: 'modelRequestDetails/INIT'});\n        yield put({type: 'modelEventDetails/INIT'});\n        yield put({type: 'modelQueryRequest/INIT'});\n        yield put({type: 'modelQueryEvent/INIT'});\n        yield put({type: 'modelNewRequest/INIT'});\n        yield put({type: 'modelNewEvent/INIT'});\n        yield put({type: 'modelKnowledgeSearch/INIT'});\n        yield put({type: 'modelIndexPageContent/INIT'});\n        yield put({type: 'modelLoginContent/INIT'});\n        notificationConfig('退出成功', 'success');\n        delAllCookie();\n        hashHistory.push('/loginContent');\n      } else {\n        notificationConfig('退出失败', 'error');\n      }\n    },\n    * submitUpdateUserMsgData({payload}, {call, put, select}) {\n      const result = yield call(postUpdateUserMsg, payload);\n      const notificationConfig = function (msg, type) {\n        notification[type]({\n          message: msg,\n          placement: 'topLeft',\n        });\n      };\n      if (JSON.stringify(result).indexOf('\"err\":') === -1 && JSON.stringify(result).indexOf('\"error\":') === -1) {\n        notificationConfig('提交成功', 'success');\n      } else {\n        notificationConfig('提交失败', 'error');\n      }\n    },\n    * submitUpdateUserPwdData({payload}, {call, put, select}) {\n      const result = yield call(checkUser, payload);\n      const notificationConfig = function (msg, type) {\n        notification[type]({\n          message: msg,\n          placement: 'topLeft',\n        });\n      };\n\n      if (JSON.stringify(result).indexOf('\"err\":') === -1 && JSON.stringify(result).indexOf('\"error\":') === -1 && result.data.success) {\n        const result2 = yield call(postUpdateUserPwd, payload);\n        if (JSON.stringify(result2).indexOf('\"err\":') === -1 && result2.data.success) {\n          notificationConfig('提交成功', 'success');\n        } else {\n          notificationConfig('提交失败，两次密码输入不一致', 'error');\n        }\n      } else {\n        notificationConfig('提交失败,用户名或密码错误', 'error');\n      }\n    }\n  },\n\n  reducers: {\n    loginSuccess(state, {payload}) {\n      return Object.assign({}, state, payload);\n    },\n    initUserMsg(state, {payload}) {\n      Object.assign(state.userMsg, payload);\n      return Object.assign({}, state);\n    },\n    afterLoginRoute(state, {payload}) {\n      state.route = payload;\n      return Object.assign({}, state);\n    },\n    INIT(state, {payload}) {\n      return Object.assign({}, {\n        success: false,\n        data: null,\n        userMsg: {\n          data: {},\n        },\n        route: '',\n      });\n    },\n  },\n};\n"]}