{"version":3,"sources":["LoginForm.js"],"names":[],"mappings":"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","file":"LoginForm-compiled.js","sourcesContent":["import React from 'react';\nimport styles from './LoginForm.css';\nimport {Form, Icon, Input, Button, Checkbox} from 'antd';\nimport {Link} from 'dva/router';\nimport {getCookie, setCookie, delCookie} from '../utils/cookie';\nimport language from '../utils/Languages/index';\n\nconst L = language.IndexPageHeader.LoginForm;\nconst FormItem = Form.Item;\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.initRequest = this.initRequest.bind(this);\n    this.rememberPwd = this.rememberPwd.bind(this);\n    this.getPwdRem = this.getPwdRem.bind(this);\n    this.initPwdRem = this.initPwdRem.bind(this);\n    this.state = {\n      currentUser: (getCookie('currentUser')) ? getCookie('currentUser') : '',\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.initRequest(values);\n        this.rememberPwd(values);\n      }\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (getCookie('success')) {\n      this.props.handleCancel();\n    }\n    if (nextProps.username !== this.props.username) {\n      const value = nextProps.username.value;\n      this.getPwdRem(value);\n    }\n  }\n\n  getPwdRem(value) {\n    if (getCookie('remember') !== '') {\n      let rememberObj = JSON.parse(getCookie('remember'));\n      let rememberVal = (value) ? (\n        (rememberObj[value]) ? rememberObj[value] : ''\n      ) : '';\n      if (rememberVal) {\n        let password = rememberVal;\n        this.props.form.setFieldsValue({\n          password: (password) ? password : '',\n          remember: (rememberVal !== ''),\n        });\n      }\n    }\n  }\n\n  initPwdRem(value) {\n    if (getCookie('remember') !== '') {\n      let rememberObj = JSON.parse(getCookie('remember'));\n      let rememberVal = (value) ? (\n        (rememberObj[value]) ? rememberObj[value] : ''\n      ) : '';\n      if (rememberVal) {\n        let password = rememberVal;\n        return {\n          password: (password) ? password : '',\n          remember: (rememberVal !== ''),\n        }\n      } else {\n        return {\n          password: '',\n          remember: false,\n        };\n      }\n    }\n    return {\n      password: '',\n      remember: false,\n    };\n  }\n\n  rememberPwd(values) {\n    const {username, password, remember} = values;\n    let rememberVal = (getCookie('remember')) ? JSON.parse(getCookie('remember')) : {};\n    let rememberObj = {};\n    rememberObj[username] = password;\n    if (remember) {\n      Object.assign(rememberVal, rememberObj);\n      setCookie('remember', JSON.stringify(rememberVal), 7);\n    } else {\n      delete rememberVal[username];\n      setCookie('remember', JSON.stringify(rememberVal), 7);\n    }\n  }\n\n  initRequest(values) {\n    this.props.dispatch({\n      type: 'modelIndexPage/submitLoginData',\n      payload: values,\n    })\n  }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{width: '100%', height: '100%'}}>\n        <FormItem>\n          <div className={styles.formHeader}>{L.formHeader}</div>\n          <div className={styles.formDivider}/>\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [{required: true, message: L.username_message}],\n            initialValue: this.state.currentUser,\n          })(\n            <Input prefix={<Icon type=\"user\" style={{fontSize: 13}}/>} placeholder={L.username_placeholder}/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{required: true, message: L.password_message}],\n            initialValue: this.initPwdRem(this.state.currentUser).password,\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{fontSize: 13}}/>} type=\"password\"\n                   placeholder={L.password_placeholder}/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: this.initPwdRem(this.state.currentUser).remember,\n          })(\n            <Checkbox>{L.remember}</Checkbox>\n          )}\n          {/*<Link to=\"/loginContent\" activeStyle={{textDecoration: 'none'}} className=\"login-form-forgot\">{L.login_form_forgot}</Link>*/}\n          {/*<label className={styles.goToRegistration}>{L.goToRegistration}*/}\n          {/*/!*<Link to=\"/loginContent\" activeStyle={{textDecoration: 'none'}}>{L.goToRegistration_Link}</Link>*!/*/}\n          {/*</label><br/>*/}\n          <Button type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                  style={{width: '100%', marginTop: '10px'}}\n                  loading={this.props.loading}\n          >{L.login_form_button}</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedLoginForm = Form.create({\n  onFieldsChange(props, changedFields) {\n    props.onChange(changedFields);\n  },\n})(LoginForm);\n\nexport default WrappedLoginForm;\n"]}