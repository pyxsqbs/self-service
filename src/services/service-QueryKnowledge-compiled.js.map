{"version":3,"sources":["service-QueryKnowledge.js"],"names":[],"mappings":";;;;;QAIsB,kB,GAAA,kB;QAcA,U,GAAA,U;QAUA,kB,GAAA,kB;;AA5BtB;;;;AACA;;;;AACA;;;;;;AAEO,eAAe,kBAAf,GAAoC;AACzC,MAAI,WAAW,IAAI,QAAJ,EAAf;AACA,WAAS,MAAT,CAAgB,UAAhB,EAA4B,WAA5B;AACA,WAAS,MAAT,CAAgB,UAAhB,EAA4B,OAA5B;AACA,SAAO,uBAAQ,gBAAM,wBAAd,EAAwC;AAC7C,YAAQ,MADqC;AAE7C,UAAM,QAFuC;AAG7C,iBAAa,SAHgC;AAI7C,aAAS;AACP,eAAS;AADF;AAJoC,GAAxC,CAAP;AAQD;;AAEM,eAAe,UAAf,GAA4B;AACjC,SAAO,uBAAQ,gBAAM,kCAAd,EAAkD;AACvD,YAAQ,MAD+C;AAEvD,iBAAa,SAF0C;AAGvD,aAAS;AACP,eAAS;AADF;AAH8C,GAAlD,CAAP;AAOD;;AAEM,eAAe,kBAAf,CAAkC,OAAlC,EAA2C;AAAA,MACzC,MADyC,GACF,OADE,CACzC,MADyC;AAAA,MACjC,UADiC,GACF,OADE,CACjC,UADiC;AAAA,MACrB,SADqB,GACF,OADE,CACrB,SADqB;AAAA,MACV,IADU,GACF,OADE,CACV,IADU;;AAEhD,MAAM,SAAS;AACb,aAAS,IADI;AAEb,aAAS,CAAC,aAAa,CAAd,IAAmB,EAFf;AAGb,iBAAa,SAHA;AAIb,YAAQ,KAJK;AAKb,cAAU,MALG;AAMb,YAAQ;AANK,GAAf;AAQA,SAAO,uBAAQ,gBAAM,sCAAN,GAA+C,sBAAY,SAAZ,CAAsB,MAAtB,CAAvD,EAAsF;AAC3F,YAAQ,KADmF;AAE3F,iBAAa,SAF8E;AAG3F,aAAS;AACP,eAAS;AADF;AAHkF,GAAtF,CAAP;AAOD","file":"service-QueryKnowledge-compiled.js","sourcesContent":["import request from '../utils/request';\nimport queryString from 'querystring';\nimport api from '../utils/api';\n\nexport async function postClassification() {\n  let formData = new FormData();\n  formData.append('flowCode', 'KNOWLEDGE');\n  formData.append('validate', 'false');\n  return request(api + '/assortAction/listTree', {\n    method: 'POST',\n    body: formData,\n    credentials: 'include',\n    headers: {\n      channel: 'm',\n    }\n  });\n}\n\nexport async function postGeogId() {\n  return request(api + '/systemUserAction/showModifyInfo', {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      channel: 'm',\n    }\n  });\n}\n\nexport async function queryKnowledgeData(payload) {\n  const {geogId, pageNumber, luceneKey, sort} = payload;\n  const params = {\n    \"limit\": '15',\n    \"start\": (pageNumber - 1) * 15,\n    \"luceneKey\": luceneKey,\n    \"type\": 'all',\n    \"geogId\": geogId,\n    \"sort\": sort,\n  };\n  return request(api + '/searchRepositoryAction/searchPages?' + queryString.stringify(params), {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      channel: 'm',\n    }\n  });\n}\n"]}