{"version":3,"sources":["cookie.js"],"names":[],"mappings":"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","file":"cookie-compiled.js","sourcesContent":["let md5 = require('md5');\nconst pwdKey = 'pyxsqbs';\n\nexport function setCookie(cname, cvalue, exdays) {\n  let d = new Date();\n  let currentTime = d.getTime();\n  cvalue = encodeURIComponent(cvalue);\n  d.setTime(currentTime + (exdays * 24 * 60 * 60 * 1000));\n  let signToken = md5(pwdKey + currentTime + cvalue);\n  let cookieValue = `${signToken}&&${encryption(currentTime)}&&${encryption(cvalue)}`;\n  let expires = \"expires=\" + d.toGMTString();\n  document.cookie = cname + \"=\" + cookieValue + \"; \" + expires + '; path=/';\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let ca = document.cookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i].trim();\n    if (c.indexOf(name) === 0) {\n      let cookieValue = c.substring(name.length, c.length);\n      let cookieStrings = cookieValue.split('&&');\n      if (cookieStrings && cookieStrings.length === 3) {\n        let signToken = cookieStrings[0];\n        let currentTime = decryption(cookieStrings[1]);\n        let cvalue = decryption(cookieStrings[2]);\n        let sign = md5(pwdKey + currentTime + cvalue);\n        if (sign === signToken) {\n          cvalue = decodeURIComponent(cvalue);\n          return cvalue;\n        }\n      }\n    }\n  }\n  return \"\";\n}\n\nexport function parseCookieToJson(cookie) {\n  return '{\"' + cookie.split('; ').join('\",\"').split('=').join('\":\"') + '\"}';\n}\n\nexport function delCookie(cname) {\n  if (\n    cname !== 'language'\n    && cname !== 'remember'\n    && cname !== 'currentUser'\n  ) {\n    let d = new Date();\n    d.setTime(d.getTime() + ((-1) * 24 * 60 * 60 * 1000));\n    let expires = \"expires=\" + d.toGMTString();\n    document.cookie = cname + \"=\" + \"; \" + expires + '; path=/';\n  }\n}\n\nexport function delAllCookie() {\n  document.cookie.split('; ').map(x => (x.substring(0, x.indexOf('=')))).map(x => delCookie(x));\n}\n\nfunction stringToHex(str) {\n  let val = \"\";\n  for (let i = 0; i < str.length; i++) {\n    let doubleVal = str.charCodeAt(i).toString(16);\n    while (doubleVal.length < 2) {\n      doubleVal = '0' + doubleVal;\n    }\n    val += doubleVal;\n  }\n  return val;\n}\n\n\nfunction hexToString(str) {\n  let val = \"\";\n  let strLength = str.length;\n  for (let i = 0; i < strLength / 2; i++) {\n    let doubleVal = parseInt(str.slice(0, 2), 16);\n    val += String.fromCharCode(doubleVal);\n    str = str.slice(2);\n  }\n  return val;\n}\n\nfunction encryption(prev) {\n  if (!prev) {\n    return prev;\n  } else {\n    if (typeof prev !== 'string') {\n      prev = String(prev);\n    }\n    let next = [];\n    prev = stringToHex(prev).split('');\n    for (let i = 0; i < prev.length; i++) {\n      next.push(prev[i]);\n      for (let j = 0; j < (i + 1) % 2; j++) {\n        next.push(Math.round(Math.random() * 15).toString(16));\n      }\n    }\n    next = next.join('');\n    return next;\n  }\n}\n\n\nfunction decryption(next) {\n  if (!next) {\n    return next;\n  } else {\n    if (typeof next !== 'string') {\n      next = String(next);\n    }\n    let prev = [];\n    next = next.split('');\n    let prevLength = (next.length % 3 === 0) ? next.length * 2 / 3 : (next.length * 2 - 1) / 3;\n    for (let i = prevLength; i > 0; i--) {\n      for (let j = 0; j < i % 2; j++) {\n        next.pop();\n      }\n      prev.unshift(next.pop());\n    }\n    prev = hexToString(prev.join(''));\n    return prev;\n  }\n}\n"]}