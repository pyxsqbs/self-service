{"version":3,"sources":["QuizRobot.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEM,S;;;AACJ,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,sHACX,KADW;;AAEjB,QAAI,QAAQ,OAAO,QAAP,CAAgB,IAAhB,CAAqB,MAArB,CAA4B,CAA5B,CAAZ;AACA,QAAI,QAAQ,MAAM,OAAN,CAAc,GAAd,CAAZ;AACA,YAAQ,MAAM,MAAN,CAAa,CAAb,EAAgB,KAAhB,CAAR;AACA,UAAK,KAAL,GAAa;AACX,aAAO,KADI;AAEX,iBAAW;AAFA,KAAb;AAIA,UAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AATiB;AAUlB;;;;kCAEa;AACZ,UAAI,uBAAU,SAAV,MAAyB,EAA7B,EAAiC;AAC/B,4BAAY,IAAZ,CAAiB,GAAjB;AACD;AACF;;;yCAEoB;AACnB,UAAI,KAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAAwB,CAAxB,MAA+B,cAA/B,IACC,KAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAAwB,CAAxB,MAA+B,iBADpC,EACuD;AACrD,aAAK,QAAL,CAAc;AACZ,qBAAW;AADC,SAAd;AAGD,OALD,MAKO;AACL,aAAK,QAAL,CAAc;AACZ,qBAAW;AADC,SAAd;AAGD;AACF;;;sCAEiB,Q,EAAU;AAAA;;AAC1B,aAAO,gBAAP,CAAwB,YAAxB,EAAsC,YAAM;AAC1C,YAAI,QAAQ,OAAO,QAAP,CAAgB,IAAhB,CAAqB,MAArB,CAA4B,CAA5B,CAAZ;AACA,YAAI,QAAQ,MAAM,OAAN,CAAc,GAAd,CAAZ;AACA,gBAAQ,MAAM,MAAN,CAAa,CAAb,EAAgB,KAAhB,CAAR;AACA,YAAI,aAAa,OAAK,KAAtB,EAA6B;AAC3B,iBAAK,QAAL,CAAc;AACZ,mBAAO;AADK,WAAd;AAGA,cAAI,OAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAAwB,CAAxB,MAA+B,cAA/B,IACC,OAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAAwB,CAAxB,MAA+B,iBADpC,EACuD;AACrD,mBAAK,QAAL,CAAc;AACZ,yBAAW;AADC,aAAd;AAGD,WALD,MAKO;AACL,mBAAK,QAAL,CAAc;AACZ,yBAAW;AADC,aAAd;AAGD;AACF;AACF,OAnBD;AAoBD;;;2CAEsB;AACrB,aAAO,mBAAP,CAA2B,YAA3B;AACD;;;6BAEQ;AAAA,UACA,SADA,GACa,KAAK,KADlB,CACA,SADA;;AAEP,aACE;AAAA;AAAA,UAAM,SAAS,KAAK,WAApB,EAAiC,aAAa,EAAC,gBAAgB,MAAjB,EAA9C;AACE,+CAAK,WAAW,oBAAO,kBAAvB,EAA2C,OAAO,EAAC,KAAK,SAAN,EAAlD;AADF,OADF;AAKD;;;;EAlEqB,gBAAM,S;;kBAqEf,S","file":"QuizRobot-compiled.js","sourcesContent":["import React from 'react';\nimport styles from './QuizRobot.css';\nimport {Link, hashHistory} from 'dva/router';\nimport {getCookie} from '../utils/cookie';\n\nclass QuizRobot extends React.Component {\n  constructor(props) {\n    super(props);\n    let route = window.location.hash.substr(1);\n    let index = route.indexOf('?');\n    route = route.substr(0, index);\n    this.state = {\n      route: route,\n      changeTop: '68%',\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (getCookie('success') !== '') {\n      hashHistory.push('/');\n    }\n  }\n\n  componentWillMount() {\n    if (this.state.route.substr(1) === 'loginContent'\n      || this.state.route.substr(1) === 'knowledgeSearch') {\n      this.setState({\n        changeTop: '58%',\n      })\n    } else {\n      this.setState({\n        changeTop: '68%',\n      })\n    }\n  }\n\n  componentDidMount(preState) {\n    window.addEventListener('hashchange', () => {\n      let route = window.location.hash.substr(1);\n      let index = route.indexOf('?');\n      route = route.substr(0, index);\n      if (preState !== this.state) {\n        this.setState({\n          route: route,\n        });\n        if (this.state.route.substr(1) === 'loginContent'\n          || this.state.route.substr(1) === 'knowledgeSearch') {\n          this.setState({\n            changeTop: '58%',\n          })\n        } else {\n          this.setState({\n            changeTop: '68%',\n          })\n        }\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange');\n  }\n\n  render() {\n    const {changeTop} = this.state;\n    return (\n      <Link onClick={this.handleClick} activeStyle={{textDecoration: 'none'}}>\n        <div className={styles.quizRobotContainer} style={{top: changeTop}}/>\n      </Link>\n    );\n  }\n}\n\nexport default QuizRobot;\n"]}