{"version":3,"sources":["RequestRecordTable.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAM,IAAI,gBAAS,gBAAT,CAA0B,kBAApC;;IACM,kB;;;AAEJ,8BAAY,KAAZ,EAAmB;AAAA;;AAAA,wIACX,KADW;;AAEjB,UAAK,iBAAL,GAAyB,MAAK,iBAAL,CAAuB,IAAvB,OAAzB;AAFiB;AAGlB;;;;wCAEmB;AAClB,UAAI,QAAQ,OAAO,QAAP,CAAgB,IAAhB,CAAqB,MAArB,CAA4B,CAA5B,CAAZ;AACA,UAAM,QAAQ,MAAM,OAAN,CAAc,GAAd,CAAd;AACA,cAAQ,MAAM,MAAN,CAAa,CAAb,EAAgB,KAAhB,CAAR;AACA,UAAI,UAAU,GAAd,EAAmB;AACjB,aAAK,KAAL,CAAW,QAAX,CAAoB;AAClB,gBAAM,iDADY;AAElB,mBAAS;AAFS,SAApB;AAID;AACF;;;sCAEiB,G,EAAK;AACrB,0BAAY,IAAZ,CAAiB,qBAAqB,GAAtC;AACD;;;6BAEQ;AACP,UAAI,WAAW,KAAK,KAAL,CAAW,iBAA1B;AACA,UAAI,OAAO,EAAX;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACxC,aAAK,CAAL,IAAU;AACR,eAAK,SAAS,CAAT,EAAY,EADT;AAER,2BAAiB,SAAS,CAAT,EAAY,KAFrB;AAGR,mBAAS,SAAS,CAAT,EAAY,QAHb;AAIR,iBAAO,SAAS,CAAT,EAAY,OAJX;AAKR,iBAAO,SAAS,CAAT,EAAY,aALX;AAMR,4BAAkB,SAAS,CAAT,EAAY;AANtB,SAAV;AAQD;AACD,UAAM,UAAU,CAAC;AACf,eAAO,EAAE,yBADM;AAEf,mBAAW,iBAFI;AAGf,aAAK;AAHU,OAAD,EAIb;AACD,eAAO,EAAE,eADR;AAED,mBAAW,SAFV;AAGD,aAAK;AAHJ,OAJa,EAQb;AACD,eAAO,EAAE,aADR;AAED,mBAAW,OAFV;AAGD,aAAK;AAHJ,OARa,EAYb;AACD,eAAO,EAAE,aADR;AAED,mBAAW,OAFV;AAGD,aAAK;AAHJ,OAZa,EAgBb;AACD,eAAO,EAAE,yBADR;AAED,mBAAW,kBAFV;AAGD,aAAK;AAHJ,OAhBa,CAAhB;;AAsBA,aACE;AAAA;AAAA,UAAK,WAAW,6BAAO,2BAAvB;AACE;AACE,mBAAS,OADX;AAEE,gBAAM,IAFR;AAGE,eAAK,oBAHP;AAIE,6BAAmB,KAAK;AAJ1B;AADF,OADF;AAUD;;;;EApE8B,gBAAM,S;;kBAuExB,kB","file":"RequestRecordTable-compiled.js","sourcesContent":["import React from 'react';\nimport styles from './RequestRecordTable.css';\nimport RecordTable from './RecordTable';\nimport {hashHistory} from 'dva/router';\nimport language from '../utils/Languages/index';\n\nconst L = language.IndexPageContent.RequestRecordTable;\nclass RequestRecordTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n  }\n\n  componentDidMount() {\n    let route = window.location.hash.substr(1);\n    const index = route.indexOf('?');\n    route = route.substr(0, index);\n    if (route === '/') {\n      this.props.dispatch({\n        type: 'modelIndexPageContent/getRequestRecordTableData',\n        payload: null,\n      })\n    }\n  }\n\n  handleDoubleClick(key) {\n    hashHistory.push('/RequestDetails/' + key);\n  }\n\n  render() {\n    let dataInit = this.props.requestRecordData;\n    let data = [];\n    for (let i = 0; i < dataInit.length; i++) {\n      data[i] = {\n        key: dataInit[i].id,\n        workOrderNumber: dataInit[i].srmNo,\n        caption: dataInit[i].srmTopic,\n        entry: dataInit[i].subSort,\n        state: dataInit[i].srmStatusName,\n        currentProcessor: dataInit[i].reqName,\n      };\n    }\n    const columns = [{\n      title: L.columns_WORK_ORDER_NUMBER,\n      dataIndex: 'workOrderNumber',\n      key: 'workOrderNumber',\n    }, {\n      title: L.columns_CAPTION,\n      dataIndex: 'caption',\n      key: 'caption',\n    }, {\n      title: L.columns_ENTRY,\n      dataIndex: 'entry',\n      key: 'entry',\n    }, {\n      title: L.columns_STATE,\n      dataIndex: 'state',\n      key: 'state',\n    }, {\n      title: L.columns_CURRENT_PROCESSOR,\n      dataIndex: 'currentProcessor',\n      key: 'currentProcessor',\n    }];\n\n    return (\n      <div className={styles.requestRecordTableContainer}>\n        <RecordTable\n          columns={columns}\n          data={data}\n          tid={'RequestRecordTable'}\n          handleDoubleClick={this.handleDoubleClick}\n        />\n      </div>\n    )\n  }\n}\n\nexport default RequestRecordTable;\n"]}